// Code generated by moshi-kotlin-codegen. Do not edit.
package com.faskn.app.weatherapp.domain.model

import com.squareup.moshi.JsonAdapter
import com.squareup.moshi.JsonReader
import com.squareup.moshi.JsonWriter
import com.squareup.moshi.Moshi
import com.squareup.moshi.Types
import com.squareup.moshi.internal.Util
import java.lang.NullPointerException
import java.lang.reflect.Constructor
import kotlin.Any
import kotlin.Int
import kotlin.String
import kotlin.Suppress
import kotlin.collections.List
import kotlin.collections.emptySet
import kotlin.jvm.Volatile
import kotlin.text.buildString

@Suppress("DEPRECATION", "unused", "ClassName", "REDUNDANT_PROJECTION")
class CountryJsonAdapter(
  moshi: Moshi
) : JsonAdapter<Country>() {
  private val options: JsonReader.Options = JsonReader.Options.of("matchLevel", "value",
      "matchedWords")

  private val nullableStringAdapter: JsonAdapter<String?> = moshi.adapter(String::class.java,
      emptySet(), "matchLevel")

  private val nullableListOfNullableAnyAdapter: JsonAdapter<List<Any?>?> =
      moshi.adapter(Types.newParameterizedType(List::class.java, Any::class.java), emptySet(),
      "matchedWords")

  @Volatile
  private var constructorRef: Constructor<Country>? = null

  override fun toString(): String = buildString(29) {
      append("GeneratedJsonAdapter(").append("Country").append(')') }

  override fun fromJson(reader: JsonReader): Country {
    var matchLevel: String? = null
    var value_: String? = null
    var matchedWords: List<Any?>? = null
    var mask0 = -1
    reader.beginObject()
    while (reader.hasNext()) {
      when (reader.selectName(options)) {
        0 -> {
          matchLevel = nullableStringAdapter.fromJson(reader)
          // $mask = $mask and (1 shl 0).inv()
          mask0 = mask0 and 0xfffffffe.toInt()
        }
        1 -> {
          value_ = nullableStringAdapter.fromJson(reader)
          // $mask = $mask and (1 shl 1).inv()
          mask0 = mask0 and 0xfffffffd.toInt()
        }
        2 -> {
          matchedWords = nullableListOfNullableAnyAdapter.fromJson(reader)
          // $mask = $mask and (1 shl 2).inv()
          mask0 = mask0 and 0xfffffffb.toInt()
        }
        -1 -> {
          // Unknown name, skip it.
          reader.skipName()
          reader.skipValue()
        }
      }
    }
    reader.endObject()
    @Suppress("UNCHECKED_CAST")
    val localConstructor: Constructor<Country> = this.constructorRef ?:
        Country::class.java.getDeclaredConstructor(String::class.java, String::class.java,
        List::class.java, Int::class.javaPrimitiveType, Util.DEFAULT_CONSTRUCTOR_MARKER).also {
        this.constructorRef = it }
    return localConstructor.newInstance(
        matchLevel,
        value_,
        matchedWords,
        mask0,
        null
    )
  }

  override fun toJson(writer: JsonWriter, value: Country?) {
    if (value == null) {
      throw NullPointerException("value was null! Wrap in .nullSafe() to write nullable values.")
    }
    writer.beginObject()
    writer.name("matchLevel")
    nullableStringAdapter.toJson(writer, value.matchLevel)
    writer.name("value")
    nullableStringAdapter.toJson(writer, value.value)
    writer.name("matchedWords")
    nullableListOfNullableAnyAdapter.toJson(writer, value.matchedWords)
    writer.endObject()
  }
}
