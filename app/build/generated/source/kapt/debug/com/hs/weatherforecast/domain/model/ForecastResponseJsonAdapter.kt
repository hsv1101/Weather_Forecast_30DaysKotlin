// Code generated by moshi-kotlin-codegen. Do not edit.
package com.hs.weatherforecast.domain.model

import com.squareup.moshi.JsonAdapter
import com.squareup.moshi.JsonReader
import com.squareup.moshi.JsonWriter
import com.squareup.moshi.Moshi
import com.squareup.moshi.Types
import java.lang.NullPointerException
import kotlin.Double
import kotlin.Int
import kotlin.String
import kotlin.Suppress
import kotlin.collections.List
import kotlin.collections.emptySet
import kotlin.text.buildString

@Suppress("DEPRECATION", "unused", "ClassName", "REDUNDANT_PROJECTION")
class ForecastResponseJsonAdapter(
  moshi: Moshi
) : JsonAdapter<ForecastResponse>() {
  private val options: JsonReader.Options = JsonReader.Options.of("city", "cnt", "cod", "message",
      "list")

  private val nullableCityAdapter: JsonAdapter<City?> = moshi.adapter(City::class.java, emptySet(),
      "city")

  private val nullableIntAdapter: JsonAdapter<Int?> = moshi.adapter(Int::class.javaObjectType,
      emptySet(), "cnt")

  private val nullableStringAdapter: JsonAdapter<String?> = moshi.adapter(String::class.java,
      emptySet(), "cod")

  private val nullableDoubleAdapter: JsonAdapter<Double?> =
      moshi.adapter(Double::class.javaObjectType, emptySet(), "message")

  private val nullableListOfListItemAdapter: JsonAdapter<List<ListItem>?> =
      moshi.adapter(Types.newParameterizedType(List::class.java, ListItem::class.java), emptySet(),
      "list")

  override fun toString(): String = buildString(38) {
      append("GeneratedJsonAdapter(").append("ForecastResponse").append(')') }

  override fun fromJson(reader: JsonReader): ForecastResponse {
    var city: City? = null
    var cnt: Int? = null
    var cod: String? = null
    var message: Double? = null
    var list: List<ListItem>? = null
    reader.beginObject()
    while (reader.hasNext()) {
      when (reader.selectName(options)) {
        0 -> city = nullableCityAdapter.fromJson(reader)
        1 -> cnt = nullableIntAdapter.fromJson(reader)
        2 -> cod = nullableStringAdapter.fromJson(reader)
        3 -> message = nullableDoubleAdapter.fromJson(reader)
        4 -> list = nullableListOfListItemAdapter.fromJson(reader)
        -1 -> {
          // Unknown name, skip it.
          reader.skipName()
          reader.skipValue()
        }
      }
    }
    reader.endObject()
    return ForecastResponse(
        city = city,
        cnt = cnt,
        cod = cod,
        message = message,
        list = list
    )
  }

  override fun toJson(writer: JsonWriter, value: ForecastResponse?) {
    if (value == null) {
      throw NullPointerException("value was null! Wrap in .nullSafe() to write nullable values.")
    }
    writer.beginObject()
    writer.name("city")
    nullableCityAdapter.toJson(writer, value.city)
    writer.name("cnt")
    nullableIntAdapter.toJson(writer, value.cnt)
    writer.name("cod")
    nullableStringAdapter.toJson(writer, value.cod)
    writer.name("message")
    nullableDoubleAdapter.toJson(writer, value.message)
    writer.name("list")
    nullableListOfListItemAdapter.toJson(writer, value.list)
    writer.endObject()
  }
}
