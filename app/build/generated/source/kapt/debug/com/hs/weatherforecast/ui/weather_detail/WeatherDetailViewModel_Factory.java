// Generated by Dagger (https://dagger.dev).
package com.hs.weatherforecast.ui.weather_detail;

import com.hs.weatherforecast.domain.datasource.forecast.ForecastLocalDataSource;
import dagger.internal.Factory;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class WeatherDetailViewModel_Factory implements Factory<WeatherDetailViewModel> {
  private final Provider<ForecastLocalDataSource> forecastLocalDataSourceProvider;

  public WeatherDetailViewModel_Factory(
      Provider<ForecastLocalDataSource> forecastLocalDataSourceProvider) {
    this.forecastLocalDataSourceProvider = forecastLocalDataSourceProvider;
  }

  @Override
  public WeatherDetailViewModel get() {
    return newInstance(forecastLocalDataSourceProvider.get());
  }

  public static WeatherDetailViewModel_Factory create(
      Provider<ForecastLocalDataSource> forecastLocalDataSourceProvider) {
    return new WeatherDetailViewModel_Factory(forecastLocalDataSourceProvider);
  }

  public static WeatherDetailViewModel newInstance(
      ForecastLocalDataSource forecastLocalDataSource) {
    return new WeatherDetailViewModel(forecastLocalDataSource);
  }
}
