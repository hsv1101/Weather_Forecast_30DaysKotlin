// Generated by Dagger (https://dagger.dev).
package com.hs.weatherforecast.di.module;

import dagger.internal.Factory;
import dagger.internal.Preconditions;
import okhttp3.OkHttpClient;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class NetModule_ProvideNonCachedOkHttpClientFactory implements Factory<OkHttpClient> {
  private final NetModule module;

  public NetModule_ProvideNonCachedOkHttpClientFactory(NetModule module) {
    this.module = module;
  }

  @Override
  public OkHttpClient get() {
    return provideNonCachedOkHttpClient(module);
  }

  public static NetModule_ProvideNonCachedOkHttpClientFactory create(NetModule module) {
    return new NetModule_ProvideNonCachedOkHttpClientFactory(module);
  }

  public static OkHttpClient provideNonCachedOkHttpClient(NetModule instance) {
    return Preconditions.checkNotNull(instance.provideNonCachedOkHttpClient(), "Cannot return null from a non-@Nullable @Provides method");
  }
}
