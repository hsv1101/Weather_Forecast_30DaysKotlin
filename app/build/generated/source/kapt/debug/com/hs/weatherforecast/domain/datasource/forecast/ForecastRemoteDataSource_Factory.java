// Generated by Dagger (https://dagger.dev).
package com.hs.weatherforecast.domain.datasource.forecast;

import com.hs.weatherforecast.domain.WeatherAppAPI;
import dagger.internal.Factory;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class ForecastRemoteDataSource_Factory implements Factory<ForecastRemoteDataSource> {
  private final Provider<WeatherAppAPI> apiProvider;

  public ForecastRemoteDataSource_Factory(Provider<WeatherAppAPI> apiProvider) {
    this.apiProvider = apiProvider;
  }

  @Override
  public ForecastRemoteDataSource get() {
    return newInstance(apiProvider.get());
  }

  public static ForecastRemoteDataSource_Factory create(Provider<WeatherAppAPI> apiProvider) {
    return new ForecastRemoteDataSource_Factory(apiProvider);
  }

  public static ForecastRemoteDataSource newInstance(WeatherAppAPI api) {
    return new ForecastRemoteDataSource(api);
  }
}
