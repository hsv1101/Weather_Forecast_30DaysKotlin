// Generated by Dagger (https://dagger.dev).
package com.hs.weatherforecast.domain.datasource.currentWeather;

import com.hs.weatherforecast.db.dao.CurrentWeatherDao;
import dagger.internal.Factory;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class CurrentWeatherLocalDataSource_Factory implements Factory<CurrentWeatherLocalDataSource> {
  private final Provider<CurrentWeatherDao> currentWeatherDaoProvider;

  public CurrentWeatherLocalDataSource_Factory(
      Provider<CurrentWeatherDao> currentWeatherDaoProvider) {
    this.currentWeatherDaoProvider = currentWeatherDaoProvider;
  }

  @Override
  public CurrentWeatherLocalDataSource get() {
    return newInstance(currentWeatherDaoProvider.get());
  }

  public static CurrentWeatherLocalDataSource_Factory create(
      Provider<CurrentWeatherDao> currentWeatherDaoProvider) {
    return new CurrentWeatherLocalDataSource_Factory(currentWeatherDaoProvider);
  }

  public static CurrentWeatherLocalDataSource newInstance(CurrentWeatherDao currentWeatherDao) {
    return new CurrentWeatherLocalDataSource(currentWeatherDao);
  }
}
