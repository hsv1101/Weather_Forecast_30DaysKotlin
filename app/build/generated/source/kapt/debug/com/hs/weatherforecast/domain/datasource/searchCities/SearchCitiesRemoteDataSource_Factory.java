// Generated by Dagger (https://dagger.dev).
package com.hs.weatherforecast.domain.datasource.searchCities;

import com.algolia.search.saas.places.PlacesClient;
import com.squareup.moshi.Moshi;
import dagger.internal.Factory;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class SearchCitiesRemoteDataSource_Factory implements Factory<SearchCitiesRemoteDataSource> {
  private final Provider<PlacesClient> clientProvider;

  private final Provider<Moshi> moshiProvider;

  public SearchCitiesRemoteDataSource_Factory(Provider<PlacesClient> clientProvider,
      Provider<Moshi> moshiProvider) {
    this.clientProvider = clientProvider;
    this.moshiProvider = moshiProvider;
  }

  @Override
  public SearchCitiesRemoteDataSource get() {
    return newInstance(clientProvider.get(), moshiProvider.get());
  }

  public static SearchCitiesRemoteDataSource_Factory create(Provider<PlacesClient> clientProvider,
      Provider<Moshi> moshiProvider) {
    return new SearchCitiesRemoteDataSource_Factory(clientProvider, moshiProvider);
  }

  public static SearchCitiesRemoteDataSource newInstance(PlacesClient client, Moshi moshi) {
    return new SearchCitiesRemoteDataSource(client, moshi);
  }
}
