// Generated by Dagger (https://dagger.dev).
package com.hs.weatherforecast.domain.usecase;

import com.hs.weatherforecast.repo.SearchCitiesRepository;
import dagger.internal.Factory;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class SearchCitiesUseCase_Factory implements Factory<SearchCitiesUseCase> {
  private final Provider<SearchCitiesRepository> repositoryProvider;

  public SearchCitiesUseCase_Factory(Provider<SearchCitiesRepository> repositoryProvider) {
    this.repositoryProvider = repositoryProvider;
  }

  @Override
  public SearchCitiesUseCase get() {
    return newInstance(repositoryProvider.get());
  }

  public static SearchCitiesUseCase_Factory create(
      Provider<SearchCitiesRepository> repositoryProvider) {
    return new SearchCitiesUseCase_Factory(repositoryProvider);
  }

  public static SearchCitiesUseCase newInstance(SearchCitiesRepository repository) {
    return new SearchCitiesUseCase(repository);
  }
}
