// Generated by Dagger (https://dagger.dev).
package com.hs.weatherforecast.domain.datasource.forecast;

import com.hs.weatherforecast.db.dao.ForecastDao;
import dagger.internal.Factory;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class ForecastLocalDataSource_Factory implements Factory<ForecastLocalDataSource> {
  private final Provider<ForecastDao> forecastDaoProvider;

  public ForecastLocalDataSource_Factory(Provider<ForecastDao> forecastDaoProvider) {
    this.forecastDaoProvider = forecastDaoProvider;
  }

  @Override
  public ForecastLocalDataSource get() {
    return newInstance(forecastDaoProvider.get());
  }

  public static ForecastLocalDataSource_Factory create(Provider<ForecastDao> forecastDaoProvider) {
    return new ForecastLocalDataSource_Factory(forecastDaoProvider);
  }

  public static ForecastLocalDataSource newInstance(ForecastDao forecastDao) {
    return new ForecastLocalDataSource(forecastDao);
  }
}
