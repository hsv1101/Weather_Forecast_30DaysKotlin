// Generated by data binding compiler. Do not edit!
package com.hs.weatherforecast.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.hs.weatherforecast.R;
import com.hs.weatherforecast.ui.dashboard.CurrentWeatherViewState;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class LayoutDashboardForecastBinding extends ViewDataBinding {
  @NonNull
  public final RelativeLayout cardView;

  @NonNull
  public final ImageView imageViewWeatherIcon;

  @NonNull
  public final TextView textViewHumidity;

  @NonNull
  public final TextView textViewHumidityHeader;

  @NonNull
  public final TextView textViewTemperature;

  @NonNull
  public final TextView textViewWeatherMain;

  @Bindable
  protected CurrentWeatherViewState mViewState;

  protected LayoutDashboardForecastBinding(Object _bindingComponent, View _root,
      int _localFieldCount, RelativeLayout cardView, ImageView imageViewWeatherIcon,
      TextView textViewHumidity, TextView textViewHumidityHeader, TextView textViewTemperature,
      TextView textViewWeatherMain) {
    super(_bindingComponent, _root, _localFieldCount);
    this.cardView = cardView;
    this.imageViewWeatherIcon = imageViewWeatherIcon;
    this.textViewHumidity = textViewHumidity;
    this.textViewHumidityHeader = textViewHumidityHeader;
    this.textViewTemperature = textViewTemperature;
    this.textViewWeatherMain = textViewWeatherMain;
  }

  public abstract void setViewState(@Nullable CurrentWeatherViewState viewState);

  @Nullable
  public CurrentWeatherViewState getViewState() {
    return mViewState;
  }

  @NonNull
  public static LayoutDashboardForecastBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.layout_dashboard_forecast, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static LayoutDashboardForecastBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<LayoutDashboardForecastBinding>inflateInternal(inflater, R.layout.layout_dashboard_forecast, root, attachToRoot, component);
  }

  @NonNull
  public static LayoutDashboardForecastBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.layout_dashboard_forecast, null, false, component)
   */
  @NonNull
  @Deprecated
  public static LayoutDashboardForecastBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<LayoutDashboardForecastBinding>inflateInternal(inflater, R.layout.layout_dashboard_forecast, null, false, component);
  }

  public static LayoutDashboardForecastBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static LayoutDashboardForecastBinding bind(@NonNull View view,
      @Nullable Object component) {
    return (LayoutDashboardForecastBinding)bind(component, view, R.layout.layout_dashboard_forecast);
  }
}
